#!/bin/bash

set -e

# Check dependencies
$(dirname "$0")/claudefsd-check-dependencies

# Use a temporary directory for tmp files
tmp_dir="/tmp/claudefsd_tmp_$$"
mkdir -p "$tmp_dir"
cd "$tmp_dir"

# Function to check for required files
check_requirements() {
    # Load find_brief_file function
    source "$OLDPWD/bin/claudefsd-find-brief"
    cd "$OLDPWD"
    local brief_file=$(find_brief_file 2>/dev/null || echo "")
    cd "$tmp_dir"
    if [ -z "$brief_file" ]; then
        echo "No BRIEF.md file found in docs/ or root directory. Please create one first."
        exit 1
    fi
    
    if [ ! -f "$OLDPWD/docs/PLAN.md" ]; then
        echo "No docs/PLAN.md file found. Please run 'claudefsd create-plan' first."
        exit 1
    fi
}

# Check requirements
check_requirements

# Create logs directory
mkdir -p "$OLDPWD/logs"
LOGFILE="$OLDPWD/logs/claude-dev-mini-$(date +%Y%m%d_%H%M%S).txt"

echo -e "\033[32m==================================================================\033[0m"
echo -e "\033[32m== CLAUDE FSD DEV-MINI: FAST PARALLEL EXECUTION MODE\033[0m"
echo -e "\033[32m==================================================================\033[0m"
echo
echo "This mode attempts to complete the entire project in one shot using"
echo "parallel Task agents. Best for smaller projects that fit in context."
echo

# Go back to the project directory
cd "$OLDPWD"

# Build the omnibus prompt
omnibus_prompt="You are an elite development team leader using Claude's Task agent capabilities for rapid parallel execution.

PROJECT CONTEXT:
$([ -f docs/BRIEF.md ] && echo "=== PROJECT BRIEF ===" && cat docs/BRIEF.md || [ -f BRIEF.md ] && echo "=== PROJECT BRIEF ===" && cat BRIEF.md && echo "")
$([ -f docs/PLAN.md ] && echo "=== DEVELOPMENT PLAN ===" && cat docs/PLAN.md && echo "")
$([ -f docs/REQUIREMENTS.md ] && echo "=== REQUIREMENTS ===" && cat docs/REQUIREMENTS.md && echo "")
$([ -f docs/CLAUDE-NOTES.md ] && echo "=== TECHNICAL NOTES ===" && cat docs/CLAUDE-NOTES.md && echo "")
$([ -f README.md ] && echo "=== README ===" && cat README.md && echo "")

IMPORTANT: Before starting ANY work, you MUST read and understand:
1. The project's CLAUDE.md file (if it exists) - this contains project-specific instructions
2. The user's global CLAUDE.md file at ~/.claude/CLAUDE.md (if it exists) - this contains general development principles
3. Ensure all your work follows the architectural and development guidelines from both files

CRITICAL ANTI-PATTERNS TO AVOID (from CLAUDE.md):
- NO CHEATING: Never disable tests, exclude files from compilation, or use silent fallbacks
- FAIL FAST: Integration failures should throw exceptions, not return mock data
- NO PRODUCTION FALLBACKS: Avoid try/catch blocks that hide errors with default values
- NO BACKUP COPIES: Use git for version control, never create backup files
- DELETE OLD CODE: Remove unused functions and scripts, keep the codebase clean

YOUR MISSION:
1. Analyze the full project plan and identify all tasks that need to be completed
2. Group related tasks that can be done in parallel by different agents
3. Launch multiple Task agents concurrently to maximize efficiency
4. Each agent should have a clear, specific brief about what to implement
5. Coordinate the work to ensure consistency across all agents

EXECUTION STRATEGY:
- Read all project documentation first to understand the full scope
- Create a mental map of dependencies between tasks
- Launch agents for independent tasks in parallel batches
- For dependent tasks, sequence them appropriately
- Each agent should be given enough context to work autonomously

TASK AGENT GUIDELINES FOR BRIEFS:
When creating prompts for Task agents, ensure each one:
- Has a clear, specific goal
- Understands the project architecture and conventions
- Knows about related components they might need to integrate with
- Follows all CLAUDE.md guidelines
- Includes relevant code style and testing requirements

VERIFICATION:
After all agents complete:
- Review what was accomplished vs the plan
- Run any tests or linters specified in the project
- Summarize completion status and any issues encountered

Start by analyzing the project and planning your parallel execution strategy.
Then launch the Task agents to build this project rapidly and efficiently.

Remember: This is a one-shot execution. Make it count!"

echo "Running Claude dev-mini omnibus prompt..."
echo "This will launch multiple parallel Task agents to complete the project..."
echo

# Run the omnibus prompt
claude --dangerously-skip-permissions -p "$omnibus_prompt" 2>&1 | tee "$LOGFILE"

echo
echo -e "\033[32m==================================================================\033[0m"
echo -e "\033[32m== DEV-MINI EXECUTION COMPLETE\033[0m"
echo -e "\033[32m==================================================================\033[0m"
echo

# Run a verifier to check progress
verifier_prompt="You are a project completion verifier.

Review the work that was just completed and compare it against:
$([ -f docs/PLAN.md ] && echo "=== ORIGINAL PLAN ===" && cat docs/PLAN.md && echo "")

Your job:
1. List what was successfully completed
2. List what remains to be done (if anything)
3. Estimate the completion percentage
4. Identify any issues or errors encountered
5. Recommend next steps:
   - If mostly complete: suggest minor fixes
   - If significantly incomplete: recommend switching to 'claudefsd dev' mode

Be honest and thorough in your assessment.
Format your response clearly with sections for completed tasks, remaining tasks, and recommendations."

echo "Running completion verifier..."
echo

claude --dangerously-skip-permissions -p "$verifier_prompt" 2>&1 | tee -a "$LOGFILE"

echo
echo "Full log saved to: $LOGFILE"
echo
echo "If the project is incomplete, you can continue with:"
echo "  claudefsd dev      # For iterative development mode"
echo

# Clean up
rm -rf "$tmp_dir"