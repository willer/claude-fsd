#!/bin/bash
#
# Main development dispatcher - routes to appropriate development mode
# Usage: claudefsd-dev [direct|iterative]
# 
# Modes:
# direct: Single-context parallel execution (small to medium projects)
# iterative: Multi-iteration loop development (large projects)
#
# Examples:
#   claudefsd-dev          # Auto-detect mode from project brief
#   claudefsd-dev direct   # Force direct execution mode
#   claudefsd-dev iterative # Force iterative loop mode

set -e

# Parse command line arguments or auto-detect mode
DEV_MODE="$1"
if [ -z "$DEV_MODE" ]; then
    # Auto-detect mode from BRIEF.md
    if [ -f "BRIEF.md" ] || [ -f "docs/BRIEF.md" ]; then
        BRIEF_FILE="BRIEF.md"
        [ -f "docs/BRIEF.md" ] && BRIEF_FILE="docs/BRIEF.md"
        
        # Look for indicators of small/medium vs large projects
        if grep -qi "simple\|small\|quick\|prototype\|poc\|minimal\|script\|tool\|utility\|feature\|module" "$BRIEF_FILE"; then
            DEV_MODE="direct"
        else
            DEV_MODE="iterative"
        fi
    else
        DEV_MODE="iterative"  # Default to iterative for safety
    fi
fi

echo "Development mode: $DEV_MODE"

# Route to appropriate development script
case "$DEV_MODE" in
    direct)
        echo "Launching direct execution mode..."
        exec "$(dirname "$0")/claudefsd-dev-direct"
        ;;
    iterative)
        echo "Launching iterative development mode..."
        exec "$(dirname "$0")/claudefsd-dev-iterative"
        ;;
    small)
        # Legacy support - map to direct
        echo "Legacy 'small' mode - redirecting to direct execution..."
        exec "$(dirname "$0")/claudefsd-dev-direct"
        ;;
    large)
        # Legacy support - map to iterative
        echo "Legacy 'large' mode - redirecting to iterative development..."
        exec "$(dirname "$0")/claudefsd-dev-iterative"
        ;;
    *)
        echo "Unknown development mode: $DEV_MODE"
        echo "Valid modes: direct, iterative"
        exit 1
        ;;
esac